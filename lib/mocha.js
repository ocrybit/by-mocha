// Generated by CoffeeScript 1.3.3
(function() {
  var mocha, _,
    _this = this;

  mocha = require('mocha');

  require('coffee-script');

  _ = require('underscore');

  process.on('message', function(data) {
    var clean, failures, file, indents, obj, passes, runner, snumber, suites, tester, tests, v, _i, _len, _ref;
    file = data.file;
    tests = [];
    failures = [];
    passes = [];
    suites = [];
    snumber = -1;
    obj = {};
    clean = function(test) {
      return {
        title: test.title,
        fullTitle: test.fullTitle(),
        duration: test.duration,
        err: test.err
      };
    };
    tester = new mocha();
    _ref = data.mocha.files;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      v = _ref[_i];
      tester.addFile(v);
    }
    tester.loadFiles();
    indents = 0;
    runner = tester.run(function(err) {
      obj = {
        tests: _(tests).map(clean),
        failures: _(failures).map(clean),
        passes: _(passes).map(clean)
      };
      return process.send({
        result: obj,
        file: file,
        err: false,
        suites: suites
      });
    });
    runner.on('suite', function(suite) {
      snumber += 1;
      indents += 1;
      suite.indents = indents;
      return suites.push({
        indents: indents,
        title: suite.title,
        index: snumber
      });
    });
    runner.on('suite end', function(suite) {
      return indents -= 1;
    });
    runner.on('test end', function(test) {
      test.snumber = snumber;
      return tests.push(test);
    });
    runner.on('pass', function(test) {
      test.snumber = snumber;
      return passes.push(test);
    });
    runner.on('fail', function(test) {
      test.snumber = snumber;
      return failures.push(test);
    });
    return runnner.on('end', function(err, stats) {});
  });

}).call(this);
